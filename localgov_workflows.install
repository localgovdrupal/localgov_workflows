<?php

/**
 * @file
 * Install, update and uninstall functions for the LocalGov Workflow module.
 */

use Drupal\Core\Config\FileStorage;
use Drupal\localgov_roles\RolesHelper;
use Drupal\user\Entity\Role;

/**
 * Install the contributor role if it doesn't exist.
 */
function localgov_workflows_update_9001() {

  // Workflow assumes that editor, author and contributor roles exists. The
  // first two have been included in the LocalGov Roles module from the
  // beginning, but the contributor role is new and so should be added if it's
  // not present.
  if (!Role::load(RolesHelper::CONTRIBUTOR_ROLE)) {
    $config_key = 'user.role.' . RolesHelper::CONTRIBUTOR_ROLE;
    $config_file_path = \Drupal::service('extension.path.resolver')->getPath('module', 'localgov_roles') . '/config/install';
    $source = new FileStorage($config_file_path);
    $contributor_config = $source->read($config_key);
    \Drupal::entityTypeManager()->getStorage('user_role')
      ->create($contributor_config)
      ->save();
  }
}

/**
 * Ensure approvals dashboard view is removed when uninstalling the module.
 */
function localgov_workflows_update_9002() {

  // Add enforced dependency to localgov_workflows approvals dashboard view.
  $config_factory = \Drupal::configFactory();
  $config = $config_factory->getEditable('views.view.localgov_approvals_dashboard');
  $dependencies = $config->get('dependencies');

  $updated = FALSE;
  if (isset($dependencies['enforced']['module']) && !in_array('localgov_workflows', $dependencies['enforced']['module'], TRUE)) {
    $dependencies['enforced']['module'][] = 'localgov_workflows';
    $updated = TRUE;
  }
  elseif (!isset($dependencies['enforced'])) {
    $dependencies['enforced'] = [
      'module' => [
        'localgov_workflows',
      ],
    ];
    $updated = TRUE;
  }

  if ($updated) {
    $config->set('dependencies', $dependencies);
    $config->save();
  }
}

/**
 * Enable Diff module and configure it to use the admin theme.
 */
function localgov_workflows_update_9003() {

  // Enable and configure the Diff module if it's not already enabled.
  if (!\Drupal::moduleHandler()->moduleExists('diff')) {
    \Drupal::service('module_installer')->install(['diff']);
    $config = \Drupal::configFactory()->getEditable('diff.settings');
    $settings = $config->get('general_settings');
    $settings['visual_inline_theme'] = 'admin';
    $config->set('general_settings', $settings);
    $config->save();
  }
}
