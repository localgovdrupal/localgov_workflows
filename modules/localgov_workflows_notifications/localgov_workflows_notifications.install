<?php

/**
 * @file
 * Install functions for the LocalGov Review Notifications module.
 */

/**
 * Implements hook_install().
 */
function localgov_workflows_notifications_install($is_syncing) {

  // Display a message if a conflicting mail module is enabled.
  $conflicts = [
    'sendgrid' => 'Sendgrid',
    'smtp' => 'SMTP',
    'mailsystem' => 'Mail System',
  ];
  foreach ($conflicts as $module => $title) {
    if (\Drupal::moduleHandler()->moduleExists($module)) {
      \Drupal::logger('localgov_workflows_notifications')->warning(
        'The @title module is installed and this is incompatible with the Symfony Mailer module which has just been enabled. Please disable the conflicting module and review the sites email settings.',
        ['@title' => $title]);
      \Drupal::messenger()->addWarning(t(
        'The @title module is installed and this is incompatible with the Symfony Mailer module which has just been enabled. Please disable the conflicting module and review the sites email settings.',
        ['@title' => $title]));
    }
  }

  // Initialise last_email_run state variable.
  $request_time = \Drupal::time()->getRequestTime();
  \Drupal::state()->set('localgov_workflows_notifications.last_email_run', $request_time);
}

/**
 * Initialise last_email_run state variable.
 */
function localgov_workflows_notifications_update_10001(&$sandbox) {

  $last_run = \Drupal::state()->get('localgov_workflows_notifications.last_email_run');
  if (is_null($last_run)) {
    $request_time = \Drupal::time()->getRequestTime();
    \Drupal::state()->set('localgov_workflows_notifications.last_email_run', $request_time);
  }
}
